"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
exports.getFormatters = getFormatters;
exports.printResult = printResult;

var _chalk = _interopRequireDefault(require("chalk"));

var _lodash = require("lodash");

var _findSanityModuleVersions = _interopRequireDefault(require("../../actions/versions/findSanityModuleVersions"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = async (args, context) => {
  printResult(await (0, _findSanityModuleVersions.default)(context, {
    target: 'latest'
  }), context.output.print);
};

exports.default = _default;

function printResult(versions, print) {
  const {
    versionLength,
    formatName
  } = getFormatters(versions);
  versions.forEach(mod => {
    const version = (0, _lodash.padStart)(mod.installed || '<missing>', versionLength);
    const latest = mod.installed === mod.latest ? _chalk.default.green('(up to date)') : `(latest: ${_chalk.default.yellow(mod.latest)})`;
    print(`${formatName(mod.name)} ${version} ${latest}`);
  });
}

function getFormatters(versions) {
  const nameLength = versions.reduce((max, mod) => Math.max(max, mod.name.length), 0);
  const versionLength = versions.reduce((max, mod) => Math.max(max, (mod.installed || '<missing>').length), 0);

  const formatName = name => (0, _lodash.padEnd)(name, nameLength + 1).replace(/^@sanity\/(.*)/, `${_chalk.default.yellow('@sanity/')}${_chalk.default.cyan('$1')}`);

  return {
    nameLength,
    versionLength,
    formatName
  };
}